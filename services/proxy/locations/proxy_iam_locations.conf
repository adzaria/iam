# proxy_iam_locations.conf
#
# Public routes and protected routes needing custom handling
# are handled by the location blocks bellow. Protected routes are
# proxied to the IAM service after verification of the access token.

location /api/internal/v1/auth {
    # Called by the client to get the current user
    location /api/internal/v1/auth/whoami {
        limit_except GET { deny all; }
        proxy_pass http://iam;
    }

    # Called by the client to create a new user
    location /api/internal/v1/auth/register {
        limit_except POST { deny all; }
        proxy_pass http://iam;
    }

    # Called by the client to send a verification email to a user
    # /!\ This route can issue a verification code
    location /api/internal/v1/auth/users/email-verification/send {
        limit_except POST { deny all; }
        proxy_pass http://iam;
    }

    # Called by the client to verify the email of a user and get an authorization code
    # /!\ This route can issue an authorization code
    location /api/internal/v1/auth/users/email-verification/verify {
        limit_except PATCH { deny all; }
        proxy_pass http://iam;
    }

    # Called by the client to receive an authorization code via email
    # /!\ This route can issue an authorization code
    location /api/internal/v1/auth/magic-link {
        limit_except POST { deny all; }
        proxy_pass http://iam;
    }

    # Called by the client to exchange an authorization code
    # for an access token and a refresh token
    # /!\ This route is the only route that can issue access and refresh tokens
    location /api/internal/v1/auth/token {
        limit_except POST { deny all; }
        proxy_pass http://iam;
    }

    # Called by the client to log the user out
    location /api/internal/v1/auth/logout {
        limit_except POST { deny all; }
        proxy_pass http://iam;
    }

    # Called by the client to get a new access token
    # /!\ This route can issue an authorization token
    location /api/internal/v1/auth/refresh {
        limit_except POST { deny all; }
        proxy_pass http://iam;
    }

    # Catch all - Redirects traffic to the IAM service
    location /api/internal/v1/auth {
        access_by_lua_block { (require "middlewares").control_access_token() }
        proxy_pass http://iam;
    }
}